#Of course if this is real production application h2 database would not be used
#Since rest of the application is deployed on GCP, it would probably mean that this would be changed to
#MySQL or Postgres instances since those are available in Google Cloud Sql
spring.datasource.url=jdbc:h2:mem:call_recorder_db;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
#Same goes with password. If CloudSql is used password should not go here as plain text but in secretManager
#It's awful practice putting secret info in source code. These type of information goes or on server if on premise,
#Or usually as secrets if it's cloud solution.
#However, it is not primary goal to set up CloudSql, create service account on CloudRun to talk to database in CloudSql
#And use secrets from secretManager
spring.datasource.password=password
spring.datasource.hikari.catalog=call_recorder_db
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

#In prod env usually goes 'none' or 'validate' since hibernate should not automatically create tables
spring.jpa.hibernate.ddl-auto=validate

spring.flyway.user=sa
spring.flyway.password=password
spring.flyway.url=jdbc:h2:mem:call_recorder_db

server.servlet.context-path=/api
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

