plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.qtelecom'
version = '1'
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
	mavenCentral()
}

ext {
    mapstructVersion = "1.4.2.Final"
    lombokVersion = "1.18.22"
    lombokMapstructBindingVersion = "0.2.0"
    swaggerVersion = "3.0.0"
    springdocOpenapiUiVersion = "1.6.5"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}",
            "org.projectlombok:lombok:${lombokVersion}",
            "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    implementation "org.springdoc:springdoc-openapi-ui:${springdocOpenapiUiVersion}"

}


sourceSets {
    test {
        java.srcDirs = ['src/test/java/junit', 'src/test/java/integration']
    }
}

tasks.named('test') {
	useJUnitPlatform()
}

// Used to annotate generated mappers with spring annotation (e.g. @Component) so DI can be used
tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}
